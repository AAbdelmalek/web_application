{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 257,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup as bs\n",
    "import requests\n",
    "from matplotlib import pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import time\n",
    "from datetime import datetime, timedelta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Youtuber's Videos URL\n",
    "url =\"https://www.youtube.com/channel/UCE6acMV3m35znLcf0JGNn7Q/videos\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get Response\n",
    "response = requests.get(url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 260,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create Soup Object\n",
    "soup = bs(response.text, 'lxml')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Extract Data\n",
    "meta = soup.find_all('ul', class_='yt-lockup-meta-info')\n",
    "titles = soup.find_all('h3', class_='yt-lockup-title')\n",
    "durations = soup.find_all('span', class_ = \"video-time\")\n",
    "links = soup.find_all('h3', class_='yt-lockup-title')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get all URLs in a list\n",
    "urls = []\n",
    "\n",
    "for link in links: \n",
    "\n",
    "    url = link.a.get(\"href\")\n",
    "    \n",
    "    urls.append(\"https://www.youtube.com\" + url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get all Durations in a list\n",
    "duration_videos = []\n",
    "\n",
    "for duration in durations:\n",
    "    \n",
    "    duration_time = duration.text\n",
    "    \n",
    "    duration_videos.append(duration_time)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get all Titles in a list\n",
    "title_videos = []\n",
    "\n",
    "for title in titles:\n",
    "    \n",
    "    title_text = title.find('a').text\n",
    "    \n",
    "    title_videos.append(title_text)   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 291,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get all Views and Dates in two lists\n",
    "views = []\n",
    "date = []\n",
    "\n",
    "for data in meta:\n",
    "    \n",
    "    meta_data = data.find_all(\"li\")\n",
    "\n",
    "    string_views = meta_data[0].text.split(\" \")[0]\n",
    "    \n",
    "    int_views = int(string_views.replace(\",\",\"\"))\n",
    "    \n",
    "    views.append(int_views)\n",
    "    \n",
    "    raw_date = meta_data[1].text\n",
    "     \n",
    "    date_list = raw_date.split(\" \")\n",
    "    \n",
    "    if date_list[1] == \"hours\":\n",
    "        \n",
    "        hours = int(date_list[0])\n",
    "        days = hours/24\n",
    "    \n",
    "    elif date_list[1] == \"days\":\n",
    "        \n",
    "        days = int(date_list[0])\n",
    "        \n",
    "    elif date_list[1] == \"weeks\":\n",
    "        \n",
    "        weeks = int(date_list[0])\n",
    "        days = weeks*7\n",
    "      \n",
    "    elif date_list[1] == \"months\":\n",
    "        \n",
    "        months = int(date_list[0])\n",
    "        \n",
    "        days = months*30\n",
    "    \n",
    "    convert_date = (datetime.today() - timedelta(days=days)).date()\n",
    "    \n",
    "    date.append(convert_date)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Going to Each Videos and Extracting Data\n",
    "published_on = []\n",
    "\n",
    "for i in range(len(urls)):\n",
    "    \n",
    "    video_url = urls[i]\n",
    "    \n",
    "    video_response = requests.get(video_url)\n",
    "    \n",
    "    video_soup = bs(video_response.text, 'lxml')\n",
    "    \n",
    "    raw_publish_date = video_soup.find(\"strong\",class_=\"watch-time-text\").text\n",
    "    \n",
    "    publish_date = raw_publish_date.split(\" \")[2:5]\n",
    "    \n",
    "    publish_date_format = \" \".join(publish_date)\n",
    "    \n",
    "    published_on.append(publish_date_format)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Published On</th>\n",
       "      <th>Title</th>\n",
       "      <th>Duration</th>\n",
       "      <th>Views</th>\n",
       "      <th>URL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[Dec, 1,, 2018]</td>\n",
       "      <td>[ASMR] Whispered Farm Simulator Gameplay {Typi...</td>\n",
       "      <td>43:00</td>\n",
       "      <td>271037</td>\n",
       "      <td>https://www.youtube.com/watch?v=U5k9Dff4voY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[Dec, 4,, 2018]</td>\n",
       "      <td>[ASMR] Big Sister Reads You to Sleep During a ...</td>\n",
       "      <td>29:36</td>\n",
       "      <td>186095</td>\n",
       "      <td>https://www.youtube.com/watch?v=Fg9mdZvT-_U</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[Dec, 6,, 2018]</td>\n",
       "      <td>[ASMR] Unwrapping Wooden Triggers ‚ô° (Soft Spok...</td>\n",
       "      <td>41:30</td>\n",
       "      <td>303841</td>\n",
       "      <td>https://www.youtube.com/watch?v=doS3YF55xX4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[Dec, 8,, 2018]</td>\n",
       "      <td>[ASMR] Happy Christmas Song Humming for Sleep ‚ùÑÔ∏èüéÑ</td>\n",
       "      <td>19:20</td>\n",
       "      <td>114061</td>\n",
       "      <td>https://www.youtube.com/watch?v=M0xRCrqaffA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>[Nov, 1,, 2018]</td>\n",
       "      <td>[ASMR] Big Sister Reads You to Sleep During a ...</td>\n",
       "      <td>44:23</td>\n",
       "      <td>298798</td>\n",
       "      <td>https://www.youtube.com/watch?v=cv3LH8x9yM0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>[Nov, 10,, 2018]</td>\n",
       "      <td>Exploring ASMR Objects with an ASMRtist {ft. A...</td>\n",
       "      <td>25:49</td>\n",
       "      <td>359278</td>\n",
       "      <td>https://www.youtube.com/watch?v=2cs5mhZTlYA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>[Nov, 13,, 2018]</td>\n",
       "      <td>[ASMR] The Gaming Store 4</td>\n",
       "      <td>35:00</td>\n",
       "      <td>925337</td>\n",
       "      <td>https://www.youtube.com/watch?v=rH8KWADhriA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>[Nov, 15,, 2018]</td>\n",
       "      <td>[ASMR] Soft Spoken Wig Try-On</td>\n",
       "      <td>26:22</td>\n",
       "      <td>361114</td>\n",
       "      <td>https://www.youtube.com/watch?v=ySbCtJPeo3Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>[Nov, 17,, 2018]</td>\n",
       "      <td>[ASMR] In-Home Eye Exam &amp; Contact Appointment</td>\n",
       "      <td>19:49</td>\n",
       "      <td>704358</td>\n",
       "      <td>https://www.youtube.com/watch?v=s__lrPUJj24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>[Nov, 20,, 2018]</td>\n",
       "      <td>[ASMR] Making a Hand Turkey ‚ô° Scissor Snipping...</td>\n",
       "      <td>36:09</td>\n",
       "      <td>494139</td>\n",
       "      <td>https://www.youtube.com/watch?v=s4rAhZ-o2t8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>[Nov, 22,, 2018]</td>\n",
       "      <td>[ASMR] Gibi &amp; Fast ASMR: German üá©üá™ vs American...</td>\n",
       "      <td>35:56</td>\n",
       "      <td>433112</td>\n",
       "      <td>https://www.youtube.com/watch?v=jRY4GAYR4rA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>[Nov, 24,, 2018]</td>\n",
       "      <td>[ASMR] Daphne Interrogates You | Scooby Doo</td>\n",
       "      <td>22:14</td>\n",
       "      <td>588718</td>\n",
       "      <td>https://www.youtube.com/watch?v=NrxIxEzyg90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>[Nov, 26,, 2018]</td>\n",
       "      <td>800+ Reese Mountain!! üß° ASMR Triggers for Deli...</td>\n",
       "      <td>19:39</td>\n",
       "      <td>706174</td>\n",
       "      <td>https://www.youtube.com/watch?v=GYgQrnvzNeo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>[Nov, 27,, 2018]</td>\n",
       "      <td>[ASMR] (No Talking) Soft Face and Ear Brushing...</td>\n",
       "      <td>22:47</td>\n",
       "      <td>461825</td>\n",
       "      <td>https://www.youtube.com/watch?v=nv7gnnRQvS0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[Nov, 29,, 2018]</td>\n",
       "      <td>[ASMR] Ear Massage and Brushing (Whispered Clo...</td>\n",
       "      <td>25:55</td>\n",
       "      <td>916467</td>\n",
       "      <td>https://www.youtube.com/watch?v=cu3sm0rmDQY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>[Nov, 4,, 2018]</td>\n",
       "      <td>Slow Cozy Tapping &amp; Scratching | Whispered ASM...</td>\n",
       "      <td>38:12</td>\n",
       "      <td>1332560</td>\n",
       "      <td>https://www.youtube.com/watch?v=vZ5R1wr_xO8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>[Nov, 6,, 2018]</td>\n",
       "      <td>Gibi &amp; Frivvi Take Care of You at a Party [ASMR]</td>\n",
       "      <td>16:27</td>\n",
       "      <td>970210</td>\n",
       "      <td>https://www.youtube.com/watch?v=Mx0Q0ZEzYQY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>[Nov, 8,, 2018]</td>\n",
       "      <td>[ASMR] Japanese Convenience Store Checkout wit...</td>\n",
       "      <td>16:33</td>\n",
       "      <td>552859</td>\n",
       "      <td>https://www.youtube.com/watch?v=3yzhzBpPg6s</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>[Oct, 11,, 2018]</td>\n",
       "      <td>Not-So-ASMR Bloopers (Part 5) [Adult Language ‚ö†Ô∏è]</td>\n",
       "      <td>4:49</td>\n",
       "      <td>839588</td>\n",
       "      <td>https://www.youtube.com/watch?v=_8HiTB_K0jo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>[Oct, 13,, 2018]</td>\n",
       "      <td>Top Triggers for Sleep and Relaxation ~ 3Dio S...</td>\n",
       "      <td>22:28</td>\n",
       "      <td>1145350</td>\n",
       "      <td>https://www.youtube.com/watch?v=KyWbYFLT9ys</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>[Oct, 16,, 2018]</td>\n",
       "      <td>[ASMR] Whispered Wig Try-On ‚ô°</td>\n",
       "      <td>27:44</td>\n",
       "      <td>521954</td>\n",
       "      <td>https://www.youtube.com/watch?v=zIYuEOdPNV8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>[Oct, 18,, 2018]</td>\n",
       "      <td>[ASMR] Cooking with Gibi - Mexican Beef Bowls</td>\n",
       "      <td>23:05</td>\n",
       "      <td>347805</td>\n",
       "      <td>https://www.youtube.com/watch?v=FQkDEbgIXFo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>[Oct, 20,, 2018]</td>\n",
       "      <td>New Tingly Trigger Items for ASMR (Whispered)</td>\n",
       "      <td>26:08</td>\n",
       "      <td>826510</td>\n",
       "      <td>https://www.youtube.com/watch?v=3lVG6mnCuJw</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>[Oct, 23,, 2018]</td>\n",
       "      <td>[ASMR] Tracing &amp; Tapping on My Art Collection</td>\n",
       "      <td>43:42</td>\n",
       "      <td>419805</td>\n",
       "      <td>https://www.youtube.com/watch?v=VsKrXG-j2E0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>[Oct, 25,, 2018]</td>\n",
       "      <td>Mochi Ice Cream &amp; Macarons | ASMR Chat &amp; Eating</td>\n",
       "      <td>35:06</td>\n",
       "      <td>912972</td>\n",
       "      <td>https://www.youtube.com/watch?v=6nGeE-18kog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>[Oct, 27,, 2018]</td>\n",
       "      <td>[ASMR] Ninja Trials in the Forest (Whispered)</td>\n",
       "      <td>32:39</td>\n",
       "      <td>787118</td>\n",
       "      <td>https://www.youtube.com/watch?v=g0IO0a9cNcY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>[Oct, 30,, 2018]</td>\n",
       "      <td>ASMR Typing on 3 Different Keyboards [Black Wi...</td>\n",
       "      <td>30:59</td>\n",
       "      <td>1907343</td>\n",
       "      <td>https://www.youtube.com/watch?v=_vDHvPd8zaY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>[Oct, 4,, 2018]</td>\n",
       "      <td>ASMR Equipment Shop - Tingly Items for Sale</td>\n",
       "      <td>30:21</td>\n",
       "      <td>618075</td>\n",
       "      <td>https://www.youtube.com/watch?v=AR_g0fMaWO8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>[Oct, 6,, 2018]</td>\n",
       "      <td>Angelic Triggers üïäÔ∏è Gentle Sounds &amp; Whispers f...</td>\n",
       "      <td>24:47</td>\n",
       "      <td>1347018</td>\n",
       "      <td>https://www.youtube.com/watch?v=ot1CdVzQ7Jk</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>[Oct, 9,, 2018]</td>\n",
       "      <td>Devilish Triggers üòà Firey Soft Spoken Triggers...</td>\n",
       "      <td>25:22</td>\n",
       "      <td>1326942</td>\n",
       "      <td>https://www.youtube.com/watch?v=F7ft3E_VR0o</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Published On                                              Title  \\\n",
       "3    [Dec, 1,, 2018]  [ASMR] Whispered Farm Simulator Gameplay {Typi...   \n",
       "2    [Dec, 4,, 2018]  [ASMR] Big Sister Reads You to Sleep During a ...   \n",
       "1    [Dec, 6,, 2018]  [ASMR] Unwrapping Wooden Triggers ‚ô° (Soft Spok...   \n",
       "0    [Dec, 8,, 2018]  [ASMR] Happy Christmas Song Humming for Sleep ‚ùÑÔ∏èüéÑ   \n",
       "17   [Nov, 1,, 2018]  [ASMR] Big Sister Reads You to Sleep During a ...   \n",
       "13  [Nov, 10,, 2018]  Exploring ASMR Objects with an ASMRtist {ft. A...   \n",
       "12  [Nov, 13,, 2018]                          [ASMR] The Gaming Store 4   \n",
       "11  [Nov, 15,, 2018]                      [ASMR] Soft Spoken Wig Try-On   \n",
       "10  [Nov, 17,, 2018]      [ASMR] In-Home Eye Exam & Contact Appointment   \n",
       "9   [Nov, 20,, 2018]  [ASMR] Making a Hand Turkey ‚ô° Scissor Snipping...   \n",
       "8   [Nov, 22,, 2018]  [ASMR] Gibi & Fast ASMR: German üá©üá™ vs American...   \n",
       "7   [Nov, 24,, 2018]        [ASMR] Daphne Interrogates You | Scooby Doo   \n",
       "6   [Nov, 26,, 2018]  800+ Reese Mountain!! üß° ASMR Triggers for Deli...   \n",
       "5   [Nov, 27,, 2018]  [ASMR] (No Talking) Soft Face and Ear Brushing...   \n",
       "4   [Nov, 29,, 2018]  [ASMR] Ear Massage and Brushing (Whispered Clo...   \n",
       "16   [Nov, 4,, 2018]  Slow Cozy Tapping & Scratching | Whispered ASM...   \n",
       "15   [Nov, 6,, 2018]   Gibi & Frivvi Take Care of You at a Party [ASMR]   \n",
       "14   [Nov, 8,, 2018]  [ASMR] Japanese Convenience Store Checkout wit...   \n",
       "26  [Oct, 11,, 2018]  Not-So-ASMR Bloopers (Part 5) [Adult Language ‚ö†Ô∏è]   \n",
       "25  [Oct, 13,, 2018]  Top Triggers for Sleep and Relaxation ~ 3Dio S...   \n",
       "24  [Oct, 16,, 2018]                      [ASMR] Whispered Wig Try-On ‚ô°   \n",
       "23  [Oct, 18,, 2018]      [ASMR] Cooking with Gibi - Mexican Beef Bowls   \n",
       "22  [Oct, 20,, 2018]      New Tingly Trigger Items for ASMR (Whispered)   \n",
       "21  [Oct, 23,, 2018]      [ASMR] Tracing & Tapping on My Art Collection   \n",
       "20  [Oct, 25,, 2018]    Mochi Ice Cream & Macarons | ASMR Chat & Eating   \n",
       "19  [Oct, 27,, 2018]      [ASMR] Ninja Trials in the Forest (Whispered)   \n",
       "18  [Oct, 30,, 2018]  ASMR Typing on 3 Different Keyboards [Black Wi...   \n",
       "29   [Oct, 4,, 2018]        ASMR Equipment Shop - Tingly Items for Sale   \n",
       "28   [Oct, 6,, 2018]  Angelic Triggers üïäÔ∏è Gentle Sounds & Whispers f...   \n",
       "27   [Oct, 9,, 2018]  Devilish Triggers üòà Firey Soft Spoken Triggers...   \n",
       "\n",
       "   Duration    Views                                          URL  \n",
       "3     43:00   271037  https://www.youtube.com/watch?v=U5k9Dff4voY  \n",
       "2     29:36   186095  https://www.youtube.com/watch?v=Fg9mdZvT-_U  \n",
       "1     41:30   303841  https://www.youtube.com/watch?v=doS3YF55xX4  \n",
       "0     19:20   114061  https://www.youtube.com/watch?v=M0xRCrqaffA  \n",
       "17    44:23   298798  https://www.youtube.com/watch?v=cv3LH8x9yM0  \n",
       "13    25:49   359278  https://www.youtube.com/watch?v=2cs5mhZTlYA  \n",
       "12    35:00   925337  https://www.youtube.com/watch?v=rH8KWADhriA  \n",
       "11    26:22   361114  https://www.youtube.com/watch?v=ySbCtJPeo3Y  \n",
       "10    19:49   704358  https://www.youtube.com/watch?v=s__lrPUJj24  \n",
       "9     36:09   494139  https://www.youtube.com/watch?v=s4rAhZ-o2t8  \n",
       "8     35:56   433112  https://www.youtube.com/watch?v=jRY4GAYR4rA  \n",
       "7     22:14   588718  https://www.youtube.com/watch?v=NrxIxEzyg90  \n",
       "6     19:39   706174  https://www.youtube.com/watch?v=GYgQrnvzNeo  \n",
       "5     22:47   461825  https://www.youtube.com/watch?v=nv7gnnRQvS0  \n",
       "4     25:55   916467  https://www.youtube.com/watch?v=cu3sm0rmDQY  \n",
       "16    38:12  1332560  https://www.youtube.com/watch?v=vZ5R1wr_xO8  \n",
       "15    16:27   970210  https://www.youtube.com/watch?v=Mx0Q0ZEzYQY  \n",
       "14    16:33   552859  https://www.youtube.com/watch?v=3yzhzBpPg6s  \n",
       "26     4:49   839588  https://www.youtube.com/watch?v=_8HiTB_K0jo  \n",
       "25    22:28  1145350  https://www.youtube.com/watch?v=KyWbYFLT9ys  \n",
       "24    27:44   521954  https://www.youtube.com/watch?v=zIYuEOdPNV8  \n",
       "23    23:05   347805  https://www.youtube.com/watch?v=FQkDEbgIXFo  \n",
       "22    26:08   826510  https://www.youtube.com/watch?v=3lVG6mnCuJw  \n",
       "21    43:42   419805  https://www.youtube.com/watch?v=VsKrXG-j2E0  \n",
       "20    35:06   912972  https://www.youtube.com/watch?v=6nGeE-18kog  \n",
       "19    32:39   787118  https://www.youtube.com/watch?v=g0IO0a9cNcY  \n",
       "18    30:59  1907343  https://www.youtube.com/watch?v=_vDHvPd8zaY  \n",
       "29    30:21   618075  https://www.youtube.com/watch?v=AR_g0fMaWO8  \n",
       "28    24:47  1347018  https://www.youtube.com/watch?v=ot1CdVzQ7Jk  \n",
       "27    25:22  1326942  https://www.youtube.com/watch?v=F7ft3E_VR0o  "
      ]
     },
     "execution_count": 307,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create DataFrame\n",
    "df = pd.DataFrame({\"Published On\": published_on,\n",
    "                   \"Title\" : title_videos,\n",
    "                   \"Duration\" : duration_videos,\n",
    "                   \"Views\" : views,\n",
    "                   \"URL\" : urls\n",
    "                  })\n",
    "\n",
    "df = df.sort_values(\"Published On\",ascending=True).reindex()\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n",
       "        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]),\n",
       " <a list of 30 Text xticklabel objects>)"
      ]
     },
     "execution_count": 287,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Graph Data\n",
    "plt.bar(np.arange(0,len(df),1),df[\"Views\"], tick_label = df[\"Approximate Date\"])\n",
    "plt.xticks(rotation=90)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:PythonData]",
   "language": "python",
   "name": "conda-env-PythonData-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
